# -*- coding: utf-8 -*-
"""prediction-xgboost-model

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I0Zi8zCiddTzmuLW9Iu_rd-vQbNrwRx2
"""

#import the libraries
import pandas as pd
import xgboost as xgb
import shap
from sklearn.metrics import confusion_matrix

#read a data
data = pd.read_csv('/content/Affairs.csv')
data.head()

#check the datatype
data.dtypes

#transformation
data['occupation'] = data.occupation.astype('category')

import numpy as np
X = data.iloc[:, 2:]
y = data.iloc[:, 1]
y = np.where(y>0,1,0)

X = pd.get_dummies(data=X,
                   drop_first=True)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2,random_state=1502)

Train = xgb.DMatrix(X_train,label=y_train)
Test = xgb.DMatrix(X_test,label=y_test)

parameters = {
    'learning rate':0.3,
    'max_depth':6,
    'colsample_bytree':1,
    'subsample':1,
    'min_child_weight':1,
    'gamma':0,
    'random_state':1502,
    'eval_metric':"auc",
    'objective':"binary:logistic"

}

model = xgb.train(params = parameters,
                  dtrain = Train,
                  num_boost_round = 10,
                  evals = [(Test,"Yes")])

predictions = model.predict(Test)
predictions = np.where(predictions > 0.5, 1, 0)

confusion_matrix = confusion_matrix(y_test,predictions)
print(confusion_matrix)